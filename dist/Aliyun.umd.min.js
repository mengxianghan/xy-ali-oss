!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("ali-oss")):"function"==typeof define&&define.amd?define(["ali-oss"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).Aliyun=e(t.OSS)}(this,(function(t){"use strict";function e(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=e(t);function s(t={},e={}){let n;for(n in e)t[n]="[object Object]"===Object.prototype.toString.call(t[n])?s(t[n],e[n]):t[n]=e[n];return t}return class extends class{constructor(t={}){this.options={async:!1,accessKeyId:"",accessKeySecret:"",stsToken:"",bucket:"",endpoint:"",region:"oss-cn-hangzhou",internal:!1,cname:!1,isRequestPay:!1,secure:!0,timeout:"60s",config:{headers:{"Cache-Control":"public"}},refreshSTSTokenInterval:1e4,rootPath:"",getConfig:function(){},getToken:function(){}}}_formatResult(t={}){const{name:e="",url:n="",res:{status:s=500,size:o=0}}=t;return{code:String(s),data:{name:e,url:n,suffix:e?`.${e.split(".").pop()}`:"",size:o}}}_generateName(t){if(!t)return"";const e=t.split(".").pop();return t.split("/").pop(),`${this.options.rootPath}/${"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)}))}.${e}`.replace(new RegExp("^\\/"),"")}}{constructor(t){super(t),this.options={...this.options,...t},this.client=null,this.#t()}async#t(){try{const{async:t}=this.options;if(t){const t=await this.options.getConfig();this.options={...this.options,...t||{}}}const{accessKeyId:e,accessKeySecret:s,stsToken:o,endpoint:i,bucket:a,cname:c,region:r,getToken:u}=this.options;this.client=new n.default({accessKeyId:e,accessKeySecret:s,stsToken:o,endpoint:i,bucket:a,cname:c,region:r,refreshSTSToken:u})}catch(t){console.error(t.message)}}upload(t,e,n={}){return new Promise((async(o,i)=>{const a=await this.client.put(this._generateName(t),e,s(n,this.options.config)).catch((t=>{i(t)}));o(this._formatResult(a))}))}multipartUpload(t,e,n={}){return new Promise((async(o,i)=>{const a=await this.client.multipartUpload(this._generateName(t),e,s(n,this.options.config)).catch((t=>{i(t)}));o(this._formatResult(a))}))}resumeMultipartUpload(t,e,n={}){return new Promise((async(o,i)=>{const a=await this.client.multipartUpload(t,e,s(n,this.options.config)).catch((t=>{i(t)}));o(this._formatResult(a))}))}pause(){this.client.cancel()}abortMultipartUpload(t,e){return new Promise((async(n,s)=>{n(await this.client.abortMultipartUpload(t,e).catch((t=>{s(t)})))}))}}}));
